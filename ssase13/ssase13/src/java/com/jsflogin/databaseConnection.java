/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jsflogin;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author peddy
 */
public class databaseConnection {
  int highestPersonID;
    String ConnectionPath = "jdbc:mysql://192.237.204.46:3306/demodb"; // "jdbc:mysql://localhost:3306/
    String ConnectionUser = "dotpeddy";
    String ConnectionPW = "nTUa77cm";
    public databaseConnection(){
        startUp();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
                         
    public void addToPersontable(String newUserName,String newName, String newAdress, int newPersonID){
       
        try{
          Class.forName("java.sql.Driver");
          Connection conn=(Connection)DriverManager.getConnection(ConnectionPath,ConnectionUser,ConnectionPW);  
       
            
            PreparedStatement inserter = (PreparedStatement) conn.prepareStatement("INSERT INTO Person(Username,Name,adress,personID) VALUES(?,?,?,?)");
            inserter.setString(1,newUserName);
            inserter.setString(2,newName);
            inserter.setString(3,"newAdress");
            inserter.setInt(4, newPersonID);
            inserter.executeUpdate();;
             conn.close();
            inserter.close();
            }
        
            catch(Exception e){
                // do something to catch error

        }
    }
    public void addToUserTable(String newUserName,String newPassword, boolean newAdmin){
       
        try{
          Class.forName("java.sql.Driver");
          Connection conn=(Connection)DriverManager.getConnection(ConnectionPath,ConnectionUser,ConnectionPW);  
       
            
            PreparedStatement inserter = (PreparedStatement) conn.prepareStatement("INSERT INTO User(Username,Password,Admin) VALUES(?,?,?)");
            inserter.setString(1,newUserName);
            inserter.setString(2,newPassword);
            inserter.setBoolean(3,newAdmin);
            
            inserter.executeUpdate();;
             conn.close();
            inserter.close();
            }
        
            catch(Exception e){
            // do something to catch error

        }
    }
    public void addToRelationTable(int newPersonID1,int newPersonID2, String newRelation){
       
        try{
          Class.forName("java.sql.Driver");
          Connection conn=(Connection)DriverManager.getConnection(ConnectionPath,ConnectionUser,ConnectionPW);  
       
            
            PreparedStatement inserter = (PreparedStatement) conn.prepareStatement("INSERT INTO Relation(PersonID1,PersonID2,Relation) VALUES(?,?,?)");
            inserter.setInt(1,newPersonID1);
            inserter.setInt(2,newPersonID2);
            inserter.setString(3,newRelation);
            
            inserter.executeUpdate();;
             conn.close();
            inserter.close();
            }
        
            catch(Exception e){
            // do something to catch error

        }
    }
    public void addToInterestTable(String newName){
       
        try{
          Class.forName("java.sql.Driver");
          Connection conn=(Connection)DriverManager.getConnection(ConnectionPath,ConnectionUser,ConnectionPW);  
       
            
            PreparedStatement inserter = (PreparedStatement) conn.prepareStatement("INSERT INTO Interest(Name) VALUES(?)");
            inserter.setString(1,newName);
           
            inserter.executeUpdate();;
             conn.close();
            inserter.close();
            }
        
            catch(Exception e){
            // do something to catch error

        }
    }
    
    public void startUp(){
        highestPersonID = 0;
        try{
            Class.forName("java.sql.Driver");
            Connection conn=(Connection)DriverManager.getConnection(ConnectionPath,ConnectionUser,ConnectionPW);
            Statement st=conn.createStatement();
            String query="SELECT * FROM Person ORDER BY PersonID DESC LIMIT 0, 1";
            


            ResultSet rs=st.executeQuery(query);
            while(rs.next()){
            highestPersonID=rs.getInt("personID");
           
            
            }
           
            rs.close();
            st.close();
            conn.close();
            }
            catch(Exception e){
            // do something to catch error

            }
    }
    public void addNewProfile(String newUserName, String newUserPW, String newName, String newAdress){
        try{
            boolean userNameTaken = checkUserNames(newUserName);
            //addToPersontable("functionUsername","functionName","functionAdress",5);
            if(!userNameTaken){
                highestPersonID++;
                addToPersontable(newUserName,newName, newAdress,highestPersonID);
            
            //addToUserTable(String newUserName,String newPassword, boolean newAdmin)
                 addToUserTable(newUserName,newUserPW, false);
            
            // addToHasInterestTable(int newPersonID,String newInterestName)
            }
            
        
       
        }
            catch(Exception e){
           // do something to catch error

        }
    }
     public void updateUserByUser(String myUserName,String newPassword){
        try{
            Class.forName("java.sql.Driver");
            Connection conn=(Connection)DriverManager.getConnection(ConnectionPath,ConnectionUser,ConnectionPW);
            Statement st=conn.createStatement();
            PreparedStatement inserter = (PreparedStatement) conn.prepareStatement("Update User SET Password=? WHERE Username=?");
            inserter.setString(1, newPassword);
            inserter.setString(2,myUserName);
            
            inserter.executeUpdate();;
            conn.close();
            inserter.close();
            
            }
            catch(Exception e){
            // do something to catch error

            }
        
    }
    public String getAdressByUser(String myUserName){
        String adress = "";
        
        try{
            Class.forName("java.sql.Driver");
            Connection conn=(Connection)DriverManager.getConnection(ConnectionPath,ConnectionUser,ConnectionPW);
            Statement st=conn.createStatement();
           
            PreparedStatement inserter = (PreparedStatement) conn.prepareStatement("Select Adress from Person WHERE Username=?");
            inserter.setString(1, myUserName);
           
            ResultSet rs=inserter.executeQuery();
            while(rs.next()){
                 adress = rs.getString("Adress");
           
            
            }
           
            rs.close();
            st.close();
            conn.close();
            }
            catch(Exception e){
            // do something to catch error

            }
        return adress;
        
    }
    public String getNameByUser(String myUserName){
        String myName = "";
        
        try{
            Class.forName("java.sql.Driver");
            Connection conn=(Connection)DriverManager.getConnection(ConnectionPath,ConnectionUser,ConnectionPW);
            Statement st=conn.createStatement();
           
            PreparedStatement inserter = (PreparedStatement) conn.prepareStatement("Select Name from Person WHERE Username=?");
            inserter.setString(1, myUserName);
           
            ResultSet rs=inserter.executeQuery();
            while(rs.next()){
                 myName = rs.getString("Name");
           
            
            }
           
            rs.close();
            st.close();
            conn.close();
            }
            catch(Exception e){
            // do something to catch error

            }
        return myName;
        
    }
    public void updatePersonByUserName(String myUserName,String newName, String newAdress){
        try{
            Class.forName("java.sql.Driver");
            Connection conn=(Connection)DriverManager.getConnection(ConnectionPath,ConnectionUser,ConnectionPW);
            PreparedStatement inserter = (PreparedStatement) conn.prepareStatement("Update Person SET Name=?, adress=? WHERE Username=?");
            inserter.setString(1, newName);
            inserter.setString(2,newAdress);
            inserter.setString(3,myUserName);
            inserter.executeUpdate();
            conn.close();
            inserter.close();
            
            }
            catch(Exception e){
           // do something to catch error

            }
        
    }
    public boolean checkUserNames(String newUserName){
        boolean taken = false;
        try{
            Class.forName("java.sql.Driver");
            Connection conn=(Connection)DriverManager.getConnection(ConnectionPath,ConnectionUser,ConnectionPW);
            Statement st=conn.createStatement();
            String query="Select * from User";
            


            ResultSet rs=st.executeQuery(query);
            while(rs.next()){
                 if(newUserName.equals(rs.getString("UserName"))){
                    System.out.println("taken") ;
                    taken = true;
                    break;
                 }
           
            
            }
           
            rs.close();
            st.close();
            conn.close();
            }
            catch(Exception e){
            // do something to catch error

            }
        return taken;
    }
    public void addToHasInterestTable(int newPersonID,String newInterestName){
       
        try{
          Class.forName("java.sql.Driver");
          Connection conn=(Connection)DriverManager.getConnection(ConnectionPath);  
       
            
            PreparedStatement inserter = (PreparedStatement) conn.prepareStatement("INSERT INTO HasInterest(PersonID,InterestName) VALUES(?,?)");
            inserter.setInt(1,newPersonID);
            inserter.setString(2,newInterestName);
           
            inserter.executeUpdate();;
             conn.close();
            inserter.close();
            }
        
            catch(Exception e){
            // do something to catch error

        }
    }
    
    
}
